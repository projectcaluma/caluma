# name: test_query_all_documents[date-None-None-2019-02-22]
  dict({
    'allDocuments': dict({
      'edges': list([
      ]),
      'totalCount': 0,
    }),
  })
# ---
# name: test_query_all_documents[dynamic_choice-MyDataSource-5.5-None]
  dict({
    'allDocuments': dict({
      'edges': list([
        dict({
          'node': dict({
            'answers': dict({
              'edges': list([
                dict({
                  'node': dict({
                    '__typename': 'StringAnswer',
                    'question': dict({
                      'label': 'Taylor Williams',
                      'slug': 'suggest-adult-allow',
                    }),
                    'string_value': '5.5',
                  }),
                }),
              ]),
              'totalCount': 1,
            }),
            'createdByUser': 'a18c653a-d278-47f1-8d6e-9ced73aeeea4',
          }),
        }),
      ]),
      'totalCount': 1,
    }),
  })
# ---
# name: test_query_all_documents[dynamic_multiple_choice-MyDataSource-answer__value9-None]
  dict({
    'allDocuments': dict({
      'edges': list([
        dict({
          'node': dict({
            'answers': dict({
              'edges': list([
                dict({
                  'node': dict({
                    '__typename': 'ListAnswer',
                    'list_value': list([
                      '5.5',
                    ]),
                    'question': dict({
                      'label': 'Taylor Williams',
                      'slug': 'suggest-adult-allow',
                    }),
                  }),
                }),
              ]),
              'totalCount': 1,
            }),
            'createdByUser': 'a18c653a-d278-47f1-8d6e-9ced73aeeea4',
          }),
        }),
      ]),
      'totalCount': 1,
    }),
  })
# ---
# name: test_query_all_documents[files-None-answer__value6-None]
  dict({
    'allDocuments': dict({
      'edges': list([
        dict({
          'node': dict({
            'answers': dict({
              'edges': list([
                dict({
                  'node': dict({
                    '__typename': 'FilesAnswer',
                    'fileValue': list([
                      dict({
                        'downloadUrl': "http://minio/download-url/09c697fb-fd0a-4345-bb9c-99df350b0cdb_[{'name': 'some-file.pdf'}]",
                        'metadata': dict({
                          'bucket_name': 'caluma-media',
                          'content_type': 'application/pdf',
                          'etag': '5d41402abc4b2a76b9719d911017c592',
                          'last_modified': '2021-03-05T15:24:33+00:00',
                          'metadata': dict({
                            'Accept-Ranges': 'bytes',
                            'Content-Length': '5',
                            'Content-Security-Policy': 'block-all-mixed-content',
                            'Content-Type': 'binary/octet-stream',
                            'Date': 'Fri, 05 Mar 2021 15:25:15 GMT',
                            'ETag': '"5d41402abc4b2a76b9719d911017c592"',
                            'Last-Modified': 'Fri, 05 Mar 2021 15:24:33 GMT',
                            'Server': 'MinIO',
                            'Vary': 'Origin',
                            'X-Amz-Request-Id': '16697BAAD69D2214',
                            'X-Xss-Protection': '1; mode=block',
                          }),
                          'size': 8200,
                        }),
                        'name': "[{'name': 'some-file.pdf'}]",
                      }),
                    ]),
                    'question': dict({
                      'label': 'Taylor Williams',
                      'slug': 'suggest-adult-allow',
                    }),
                  }),
                }),
              ]),
              'totalCount': 1,
            }),
            'createdByUser': 'a18c653a-d278-47f1-8d6e-9ced73aeeea4',
          }),
        }),
      ]),
      'totalCount': 1,
    }),
  })
# ---
# name: test_query_all_documents[files-None-answer__value7-None]
  dict({
    'allDocuments': dict({
      'edges': list([
        dict({
          'node': dict({
            'answers': dict({
              'edges': list([
                dict({
                  'node': dict({
                    '__typename': 'FilesAnswer',
                    'fileValue': list([
                      dict({
                        'downloadUrl': "http://minio/download-url/09c697fb-fd0a-4345-bb9c-99df350b0cdb_[{'name': 'some-other-file.pdf'}]",
                        'metadata': dict({
                          'bucket_name': 'caluma-media',
                          'content_type': 'application/pdf',
                          'etag': '5d41402abc4b2a76b9719d911017c592',
                          'last_modified': '2021-03-05T15:24:33+00:00',
                          'metadata': dict({
                            'Accept-Ranges': 'bytes',
                            'Content-Length': '5',
                            'Content-Security-Policy': 'block-all-mixed-content',
                            'Content-Type': 'binary/octet-stream',
                            'Date': 'Fri, 05 Mar 2021 15:25:15 GMT',
                            'ETag': '"5d41402abc4b2a76b9719d911017c592"',
                            'Last-Modified': 'Fri, 05 Mar 2021 15:24:33 GMT',
                            'Server': 'MinIO',
                            'Vary': 'Origin',
                            'X-Amz-Request-Id': '16697BAAD69D2214',
                            'X-Xss-Protection': '1; mode=block',
                          }),
                          'size': 8200,
                        }),
                        'name': "[{'name': 'some-other-file.pdf'}]",
                      }),
                    ]),
                    'question': dict({
                      'label': 'Taylor Williams',
                      'slug': 'suggest-adult-allow',
                    }),
                  }),
                }),
              ]),
              'totalCount': 1,
            }),
            'createdByUser': 'a18c653a-d278-47f1-8d6e-9ced73aeeea4',
          }),
        }),
      ]),
      'totalCount': 1,
    }),
  })
# ---
# name: test_query_all_documents[float-None-2.1-None]
  dict({
    'allDocuments': dict({
      'edges': list([
        dict({
          'node': dict({
            'answers': dict({
              'edges': list([
                dict({
                  'node': dict({
                    '__typename': 'FloatAnswer',
                    'float_value': 2.1,
                    'question': dict({
                      'label': 'Taylor Williams',
                      'slug': 'suggest-adult-allow',
                    }),
                  }),
                }),
              ]),
              'totalCount': 1,
            }),
            'createdByUser': 'a18c653a-d278-47f1-8d6e-9ced73aeeea4',
          }),
        }),
      ]),
      'totalCount': 1,
    }),
  })
# ---
# name: test_query_all_documents[integer-None-1-None]
  dict({
    'allDocuments': dict({
      'edges': list([
        dict({
          'node': dict({
            'answers': dict({
              'edges': list([
                dict({
                  'node': dict({
                    '__typename': 'IntegerAnswer',
                    'integer_value': 1,
                    'question': dict({
                      'label': 'Taylor Williams',
                      'slug': 'suggest-adult-allow',
                    }),
                  }),
                }),
              ]),
              'totalCount': 1,
            }),
            'createdByUser': 'a18c653a-d278-47f1-8d6e-9ced73aeeea4',
          }),
        }),
      ]),
      'totalCount': 1,
    }),
  })
# ---
# name: test_query_all_documents[multiple_choice-None-answer__value3-None]
  dict({
    'allDocuments': dict({
      'edges': list([
        dict({
          'node': dict({
            'answers': dict({
              'edges': list([
                dict({
                  'node': dict({
                    '__typename': 'ListAnswer',
                    'list_value': list([
                      'somevalue',
                      'anothervalue',
                    ]),
                    'question': dict({
                      'label': 'Taylor Williams',
                      'slug': 'suggest-adult-allow',
                    }),
                  }),
                }),
              ]),
              'totalCount': 1,
            }),
            'createdByUser': 'a18c653a-d278-47f1-8d6e-9ced73aeeea4',
          }),
        }),
      ]),
      'totalCount': 1,
    }),
  })
# ---
# name: test_query_all_documents[table-None-None-None]
  dict({
    'allDocuments': dict({
      'edges': list([
      ]),
      'totalCount': 0,
    }),
  })
# ---
# name: test_query_all_documents[text-None-somevalue-None]
  dict({
    'allDocuments': dict({
      'edges': list([
        dict({
          'node': dict({
            'answers': dict({
              'edges': list([
                dict({
                  'node': dict({
                    '__typename': 'StringAnswer',
                    'question': dict({
                      'label': 'Taylor Williams',
                      'slug': 'suggest-adult-allow',
                    }),
                    'string_value': 'somevalue',
                  }),
                }),
              ]),
              'totalCount': 1,
            }),
            'createdByUser': 'a18c653a-d278-47f1-8d6e-9ced73aeeea4',
          }),
        }),
      ]),
      'totalCount': 1,
    }),
  })
# ---
# name: test_save_document_answer[choice-question__configuration17-None-question__format_validators17-option-slug-None-SaveDocumentStringAnswer-True-option-slug-False-False]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        '__typename': 'StringAnswer',
        'stringValue': 'option-slug',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[choice-question__configuration17-None-question__format_validators17-option-slug-None-SaveDocumentStringAnswer-True-option-slug-False-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=choice), value='option-slug')
# ---
# name: test_save_document_answer[choice-question__configuration17-None-question__format_validators17-option-slug-None-SaveDocumentStringAnswer-True-option-slug-True-False]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        '__typename': 'StringAnswer',
        'stringValue': 'option-slug',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[choice-question__configuration17-None-question__format_validators17-option-slug-None-SaveDocumentStringAnswer-True-option-slug-True-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=choice), value='option-slug')
# ---
# name: test_save_document_answer[date-question__configuration7-None-question__format_validators7-None-2019-02-22-SaveDocumentDateAnswer-True-option-slug-False-False]
  dict({
    'saveDocumentDateAnswer': dict({
      'answer': dict({
        '__typename': 'DateAnswer',
        'dateValue': '2019-02-22',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[date-question__configuration7-None-question__format_validators7-None-2019-02-22-SaveDocumentDateAnswer-True-option-slug-False-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=date), value=None)
# ---
# name: test_save_document_answer[date-question__configuration7-None-question__format_validators7-None-2019-02-22-SaveDocumentDateAnswer-True-option-slug-True-False]
  dict({
    'saveDocumentDateAnswer': dict({
      'answer': dict({
        '__typename': 'DateAnswer',
        'dateValue': '2019-02-22',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[date-question__configuration7-None-question__format_validators7-None-2019-02-22-SaveDocumentDateAnswer-True-option-slug-True-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=date), value=None)
# ---
# name: test_save_document_answer[dynamic_choice-question__configuration21-MyDataSource-question__format_validators21-5.5-None-SaveDocumentStringAnswer-True-option-slug-False-False]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        '__typename': 'StringAnswer',
        'stringValue': '5.5',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[dynamic_choice-question__configuration21-MyDataSource-question__format_validators21-5.5-None-SaveDocumentStringAnswer-True-option-slug-False-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=dynamic_choice), value='5.5')
# ---
# name: test_save_document_answer[dynamic_choice-question__configuration21-MyDataSource-question__format_validators21-5.5-None-SaveDocumentStringAnswer-True-option-slug-True-False]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        '__typename': 'StringAnswer',
        'stringValue': '5.5',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[dynamic_choice-question__configuration21-MyDataSource-question__format_validators21-5.5-None-SaveDocumentStringAnswer-True-option-slug-True-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=dynamic_choice), value='5.5')
# ---
# name: test_save_document_answer[dynamic_multiple_choice-question__configuration19-MyDataSource-question__format_validators19-answer__value19-None-SaveDocumentListAnswer-True-option-slug-False-False]
  dict({
    'saveDocumentListAnswer': dict({
      'answer': dict({
        '__typename': 'ListAnswer',
        'listValue': list([
          '5.5',
          '1',
        ]),
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[dynamic_multiple_choice-question__configuration19-MyDataSource-question__format_validators19-answer__value19-None-SaveDocumentListAnswer-True-option-slug-False-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=dynamic_multiple_choice), value=['5.5', '1'])
# ---
# name: test_save_document_answer[dynamic_multiple_choice-question__configuration19-MyDataSource-question__format_validators19-answer__value19-None-SaveDocumentListAnswer-True-option-slug-True-False]
  dict({
    'saveDocumentListAnswer': dict({
      'answer': dict({
        '__typename': 'ListAnswer',
        'listValue': list([
          '5.5',
          '1',
        ]),
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[dynamic_multiple_choice-question__configuration19-MyDataSource-question__format_validators19-answer__value19-None-SaveDocumentListAnswer-True-option-slug-True-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=dynamic_multiple_choice), value=['5.5', '1'])
# ---
# name: test_save_document_answer[files-question__configuration10-None-question__format_validators10-answer__value10-None-SaveDocumentFilesAnswer-True-option-slug-False-False]
  dict({
    'saveDocumentFilesAnswer': dict({
      'answer': dict({
        '__typename': 'FilesAnswer',
        'fileValue': list([
          dict({
            'name': 'not-exist.pdf',
            'uploadUrl': 'http://minio/upload-url',
          }),
        ]),
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[files-question__configuration10-None-question__format_validators10-answer__value10-None-SaveDocumentFilesAnswer-True-option-slug-False-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=files), value=None)
# ---
# name: test_save_document_answer[files-question__configuration10-None-question__format_validators10-answer__value10-None-SaveDocumentFilesAnswer-True-option-slug-True-False]
  dict({
    'saveDocumentFilesAnswer': dict({
      'answer': dict({
        '__typename': 'FilesAnswer',
        'fileValue': list([
          dict({
            'name': 'not-exist.pdf',
            'uploadUrl': 'http://minio/upload-url',
          }),
        ]),
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[files-question__configuration10-None-question__format_validators10-answer__value10-None-SaveDocumentFilesAnswer-True-option-slug-True-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=files), value=None)
# ---
# name: test_save_document_answer[files-question__configuration9-None-question__format_validators9-answer__value9-None-SaveDocumentFilesAnswer-True-option-slug-False-False]
  dict({
    'saveDocumentFilesAnswer': dict({
      'answer': dict({
        '__typename': 'FilesAnswer',
        'fileValue': list([
          dict({
            'name': 'some-file.pdf',
            'uploadUrl': 'http://minio/upload-url',
          }),
        ]),
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[files-question__configuration9-None-question__format_validators9-answer__value9-None-SaveDocumentFilesAnswer-True-option-slug-False-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=files), value=None)
# ---
# name: test_save_document_answer[files-question__configuration9-None-question__format_validators9-answer__value9-None-SaveDocumentFilesAnswer-True-option-slug-True-False]
  dict({
    'saveDocumentFilesAnswer': dict({
      'answer': dict({
        '__typename': 'FilesAnswer',
        'fileValue': list([
          dict({
            'name': 'some-file.pdf',
            'uploadUrl': 'http://minio/upload-url',
          }),
        ]),
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[files-question__configuration9-None-question__format_validators9-answer__value9-None-SaveDocumentFilesAnswer-True-option-slug-True-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=files), value=None)
# ---
# name: test_save_document_answer[float-question__configuration2-None-question__format_validators2-2.1-None-SaveDocumentFloatAnswer-True-option-slug-False-False]
  dict({
    'saveDocumentFloatAnswer': dict({
      'answer': dict({
        '__typename': 'FloatAnswer',
        'floatValue': 2.1,
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[float-question__configuration2-None-question__format_validators2-2.1-None-SaveDocumentFloatAnswer-True-option-slug-False-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=float), value=2.1)
# ---
# name: test_save_document_answer[float-question__configuration2-None-question__format_validators2-2.1-None-SaveDocumentFloatAnswer-True-option-slug-True-False]
  dict({
    'saveDocumentFloatAnswer': dict({
      'answer': dict({
        '__typename': 'FloatAnswer',
        'floatValue': 2.1,
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[float-question__configuration2-None-question__format_validators2-2.1-None-SaveDocumentFloatAnswer-True-option-slug-True-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=float), value=2.1)
# ---
# name: test_save_document_answer[integer-question__configuration0-None-question__format_validators0-1-None-SaveDocumentIntegerAnswer-True-option-slug-False-False]
  dict({
    'saveDocumentIntegerAnswer': dict({
      'answer': dict({
        '__typename': 'IntegerAnswer',
        'integerValue': 1,
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[integer-question__configuration0-None-question__format_validators0-1-None-SaveDocumentIntegerAnswer-True-option-slug-False-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=integer), value=1)
# ---
# name: test_save_document_answer[integer-question__configuration0-None-question__format_validators0-1-None-SaveDocumentIntegerAnswer-True-option-slug-True-False]
  dict({
    'saveDocumentIntegerAnswer': dict({
      'answer': dict({
        '__typename': 'IntegerAnswer',
        'integerValue': 1,
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[integer-question__configuration0-None-question__format_validators0-1-None-SaveDocumentIntegerAnswer-True-option-slug-True-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=integer), value=1)
# ---
# name: test_save_document_answer[multiple_choice-question__configuration15-None-question__format_validators15-answer__value15-None-SaveDocumentListAnswer-True-option-slug-False-False]
  dict({
    'saveDocumentListAnswer': dict({
      'answer': dict({
        '__typename': 'ListAnswer',
        'listValue': list([
          'option-slug',
        ]),
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[multiple_choice-question__configuration15-None-question__format_validators15-answer__value15-None-SaveDocumentListAnswer-True-option-slug-False-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=multiple_choice), value=['option-slug'])
# ---
# name: test_save_document_answer[multiple_choice-question__configuration15-None-question__format_validators15-answer__value15-None-SaveDocumentListAnswer-True-option-slug-True-False]
  dict({
    'saveDocumentListAnswer': dict({
      'answer': dict({
        '__typename': 'ListAnswer',
        'listValue': list([
          'option-slug',
        ]),
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[multiple_choice-question__configuration15-None-question__format_validators15-answer__value15-None-SaveDocumentListAnswer-True-option-slug-True-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=multiple_choice), value=['option-slug'])
# ---
# name: test_save_document_answer[table-question__configuration12-None-question__format_validators12-None-None-SaveDocumentTableAnswer-True-option-slug-False-False]
  dict({
    'saveDocumentTableAnswer': dict({
      'answer': dict({
        '__typename': 'TableAnswer',
        'table_value': list([
          dict({
            'form': dict({
              'slug': 'eight-traditional',
            }),
          }),
          dict({
            'form': dict({
              'slug': 'eight-traditional',
            }),
          }),
        ]),
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[table-question__configuration12-None-question__format_validators12-None-None-SaveDocumentTableAnswer-True-option-slug-False-True]
  Answer(document=Document(form=Form(slug=measure-evening)), question=Question(slug=environmental-ten, type=table), value=None)
# ---
# name: test_save_document_answer[table-question__configuration12-None-question__format_validators12-None-None-SaveDocumentTableAnswer-True-option-slug-True-False]
  dict({
    'saveDocumentTableAnswer': dict({
      'answer': dict({
        '__typename': 'TableAnswer',
        'table_value': list([
          dict({
            'form': dict({
              'slug': 'eight-traditional',
            }),
          }),
          dict({
            'form': dict({
              'slug': 'eight-traditional',
            }),
          }),
        ]),
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[table-question__configuration12-None-question__format_validators12-None-None-SaveDocumentTableAnswer-True-option-slug-True-True]
  Answer(document=Document(form=Form(slug=measure-evening)), question=Question(slug=environmental-ten, type=table), value=None)
# ---
# name: test_save_document_answer[text-question__configuration24-None-question__format_validators24-test@example.com-None-SaveDocumentStringAnswer-True-option-slug-False-False]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        '__typename': 'StringAnswer',
        'stringValue': 'test@example.com',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[text-question__configuration24-None-question__format_validators24-test@example.com-None-SaveDocumentStringAnswer-True-option-slug-False-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=text), value='test@example.com')
# ---
# name: test_save_document_answer[text-question__configuration24-None-question__format_validators24-test@example.com-None-SaveDocumentStringAnswer-True-option-slug-True-False]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        '__typename': 'StringAnswer',
        'stringValue': 'test@example.com',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[text-question__configuration24-None-question__format_validators24-test@example.com-None-SaveDocumentStringAnswer-True-option-slug-True-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=text), value='test@example.com')
# ---
# name: test_save_document_answer[text-question__configuration4-None-question__format_validators4-Test-None-SaveDocumentStringAnswer-True-option-slug-False-False]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        '__typename': 'StringAnswer',
        'stringValue': 'Test',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[text-question__configuration4-None-question__format_validators4-Test-None-SaveDocumentStringAnswer-True-option-slug-False-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=text), value='Test')
# ---
# name: test_save_document_answer[text-question__configuration4-None-question__format_validators4-Test-None-SaveDocumentStringAnswer-True-option-slug-True-False]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        '__typename': 'StringAnswer',
        'stringValue': 'Test',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[text-question__configuration4-None-question__format_validators4-Test-None-SaveDocumentStringAnswer-True-option-slug-True-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=text), value='Test')
# ---
# name: test_save_document_answer[textarea-question__configuration13-None-question__format_validators13-Test-None-SaveDocumentStringAnswer-True-option-slug-False-False]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        '__typename': 'StringAnswer',
        'stringValue': 'Test',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[textarea-question__configuration13-None-question__format_validators13-Test-None-SaveDocumentStringAnswer-True-option-slug-False-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=textarea), value='Test')
# ---
# name: test_save_document_answer[textarea-question__configuration13-None-question__format_validators13-Test-None-SaveDocumentStringAnswer-True-option-slug-True-False]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        '__typename': 'StringAnswer',
        'stringValue': 'Test',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[textarea-question__configuration13-None-question__format_validators13-Test-None-SaveDocumentStringAnswer-True-option-slug-True-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=textarea), value='Test')
# ---
# name: test_save_document_answer[textarea-question__configuration26-None-question__format_validators26-test@example.com-None-SaveDocumentStringAnswer-True-option-slug-False-False]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        '__typename': 'StringAnswer',
        'stringValue': 'test@example.com',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[textarea-question__configuration26-None-question__format_validators26-test@example.com-None-SaveDocumentStringAnswer-True-option-slug-False-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=textarea), value='test@example.com')
# ---
# name: test_save_document_answer[textarea-question__configuration26-None-question__format_validators26-test@example.com-None-SaveDocumentStringAnswer-True-option-slug-True-False]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        '__typename': 'StringAnswer',
        'stringValue': 'test@example.com',
      }),
      'clientMutationId': 'testid',
    }),
  })
# ---
# name: test_save_document_answer[textarea-question__configuration26-None-question__format_validators26-test@example.com-None-SaveDocumentStringAnswer-True-option-slug-True-True]
  Answer(document=Document(form=Form(slug=eight-traditional)), question=Question(slug=environmental-ten, type=textarea), value='test@example.com')
# ---
# name: test_save_document_answer_empty[text-false-old value that needs to be deleted-False]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        '__typename': 'StringAnswer',
        'stringValue': None,
      }),
      'clientMutationId': None,
    }),
  })
# ---
# name: test_save_document_answer_empty[text-false-old value that needs to be deleted-True]
  dict({
    'saveDocumentStringAnswer': dict({
      'answer': dict({
        '__typename': 'StringAnswer',
        'stringValue': None,
      }),
      'clientMutationId': None,
    }),
  })
# ---
# name: test_selected_options[choice-somevalue-somevalue]
  dict({
    'node': dict({
      'selectedOption': dict({
        'label': 'Calvin Graham',
        'slug': 'somevalue',
      }),
      'string_value': 'somevalue',
    }),
  })
# ---
# name: test_selected_options[dynamic_choice-somevalue-somevalue]
  dict({
    'node': dict({
      'selectedOption': dict({
        'label': 'William Sloan',
        'slug': 'somevalue',
      }),
      'string_value': 'somevalue',
    }),
  })
# ---
# name: test_selected_options[dynamic_multiple_choice-answer__value4-expected_values4]
  dict({
    'node': dict({
      'list_value': list([
        'somevalue',
        'anothervalue',
      ]),
      'selectedOptions': dict({
        'edges': list([
          dict({
            'node': dict({
              'label': 'William Sloan',
              'slug': 'somevalue',
            }),
          }),
          dict({
            'node': dict({
              'label': 'Felicia Adams',
              'slug': 'anothervalue',
            }),
          }),
        ]),
      }),
    }),
  })
# ---
# name: test_selected_options[multiple_choice-answer__value1-expected_values1]
  dict({
    'node': dict({
      'list_value': list([
        'somevalue',
        'anothervalue',
      ]),
      'selectedOptions': dict({
        'edges': list([
          dict({
            'node': dict({
              'label': 'Calvin Graham',
              'slug': 'somevalue',
            }),
          }),
          dict({
            'node': dict({
              'label': 'Mary White',
              'slug': 'anothervalue',
            }),
          }),
        ]),
      }),
    }),
  })
# ---
# name: test_selected_options[multiple_choice-answer__value2-expected_values2]
  dict({
    'node': dict({
      'list_value': list([
      ]),
      'selectedOptions': dict({
        'edges': list([
        ]),
      }),
    }),
  })
# ---
# name: test_selected_options[text-somevalue-None]
  dict({
    'node': dict({
      'selectedOption': None,
      'string_value': 'somevalue',
    }),
  })
# ---
