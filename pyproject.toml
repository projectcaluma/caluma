[tool.poetry]
name = "caluma"
version = "10.3.1"
description = "Caluma Service providing GraphQL API"
homepage = "https://caluma.io"
repository = "https://github.com/projectcaluma/caluma"
documentation = "https://caluma.gitbook.io/"
authors = ["Caluma <info@caluma.io>"]
license = "GPL-3.0-or-later"
readme = "README.md"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3.8",
]
include = ["CHANGELOG.md"]
exclude = ["caluma/**/tests"]

[tool.poetry.dependencies]
python = "^3.9.13"
dateparser = "^1.2.0"
Django = "^4.2.15"
django-cors-headers = "^4.3.1"
django-environ = "^0.11.2"
django-filter = ">=23.5,<25.0"
django-localized-fields = "^6.8b5"
django-postgres-extra = "^2.0.8"
django-simple-history = "^3.4.0"
django-watchman = "^1.3.0"
djangorestframework = "^3.15.2"
graphene-django = "^3.2.2"
graphql-core = "^3.2.3"
graphql-relay = "^3.2.0"
gunicorn = "^23.0.0"
idna = "^3.6"
minio = "^7.2.7"
psycopg = { extras = ["binary"], version = "^3.1.17" }
psycopg-binary = "^3.1.17"
pyjexl = "^0.3.0"
python-memcached = "^1.62"
requests = "^2.31.0"
urllib3 = ">=1.26.8,<3.0.0"

[tool.poetry.group.dev.dependencies]
# Dev dependencies are always pinned to an exact version (No caret or tilde
# matching) to ensure everyone uses the same version of the tools, especially
# linters & formatters
django-extensions = "3.2.3"
factory-boy = "3.3.1"
Faker = "28.0.0"
gitlint = "0.19.1"
pdbpp = "0.10.3"
pre-commit = "3.8.0"
pydocstyle = "6.3.0"
pytest = "8.3.2"
pytest-cov = "5.0.0"
pytest-django = "4.8.0"
pytest-env = "1.1.3"
pytest-factoryboy = "2.7.0"
pytest-freezer= "0.4.8"
pytest-mock = "3.14.0"
pytest-randomly = "3.15.0"
pytest-xdist = "3.6.1"
python-semantic-release = "7.34.6"
requests-mock = "1.12.1"
reuse = "4.0.3"
ruff = "0.5.7"
syrupy = "4.6.1"


[tool.isort]
skip = ["migrations", "snapshots"]
known_first_party = ["caluma"]
known_third_party = ["dateparser"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true
line_length = 88

[tool.pytest.ini_options]
addopts = "-n auto --reuse-db --randomly-seed=1521188766 --randomly-dont-reorganize"
DJANGO_SETTINGS_MODULE = "caluma.settings.django"
env = [
    "META_FIELDS=test-key,foobar",
    "OIDC_USERINFO_ENDPOINT=mock://caluma.io/openid/userinfo",
    "OIDC_BEARER_TOKEN_REVALIDATION_TIME=60",
    "LANGUAGES=en,de,fr",
    "ENABLE_HISTORICAL_API=true",
    "ENABLE_ACCESS_LOG=true",
    "ENABLE_HEALTHZ_ENDPOINT=true",
]
filterwarnings = [
    "error::DeprecationWarning",
    "error::PendingDeprecationWarning",
    # warning in python 3.12 about deprecation coming in 3.14. issue is with graphene
    "ignore:.*typing.ByteString.*deprecated and slated for removal in Python 3.14",
]

[tool.ruff]
exclude = [
    "migrations",
    "snapshots",
    ".venv",
]
line-length = 88

[tool.ruff.lint]
ignore = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D202",
    "E501",
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line
    "D407", # Missing dashed underline after section
    "D406", # Section name should end with a newline
    "D203", # one-blank-line-before-class (docstring)
]
select = [
    "C9",
    "D",
    "E",
    "F",
    "W",
    "I",
]

[tool.ruff.lint.mccabe]
max-complexity = 11

[tool.ruff.lint.isort]
combine-as-imports = true


[tool.coverage.run]
source = ["."]

[tool.coverage.report]
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "pragma: todo cover",
    "def __str__",
    "def __unicode__",
    "def __repr__",
]
omit = [
    "*/migrations/*",
    "*/apps.py",
    "manage.py",
    "caluma/settings_*.py",
    "caluma/wsgi.py",
    "migrate_to_prefixed_apps.py",
    "test_migrate_to_prefixed_apps.py",
]
show_missing = true

[tool.semantic_release]
version_source = "tag"
version_toml = ["pyproject.toml:tool.poetry.version"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
