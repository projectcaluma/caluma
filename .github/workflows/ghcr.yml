name: Container image

on:
  release:
    types: [created]

  # Run build for any PRs - we won't push in those however
  pull_request:
    branches:
      - main

  # Publish `main` as Docker `dev` image.
  push:
    branches:
      - main

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: projectcaluma/caluma
  REGISTRY: ghcr.io

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/build/ci/github-actions/
  container-registry:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=dev,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push
        uses: docker/build-push-action@v6
        id: docker
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign Caluma image and attach SBOM attestation
        uses: adfinis/container-scanning-action@v0.2.13
        if: github.event_name == 'release' && github.event.action == 'created'
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          digest: ${{ steps.docker.outputs.digest }}
          attest: true
