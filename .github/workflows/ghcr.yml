name: Container image

on:
  release:
    types: [created]

  # Run build for any PRs - we won't push in those however
  pull_request:
    branches:
      - main

  # Publish `main` as Docker `latest` image.
  push:
    branches:
      - main

env:
  IMAGE_NAME: caluma

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  container-registry:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        if: github.event_name != 'pull_request'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        if: github.event_name != 'pull_request'
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          if [[ "$VERSION" == "main" ]]; then
            # only push "dev" image from main branch build
            echo "Pushing $IMAGE_ID:dev"
            docker tag $IMAGE_NAME $IMAGE_ID:dev
            docker push $IMAGE_ID:dev
          else
            # new version released - push "latest" and version tag
            echo "Pushing $IMAGE_ID:$VERSION"
            docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
            docker push $IMAGE_ID:$VERSION
            echo "Pushing $IMAGE_ID:latest"
            docker tag $IMAGE_NAME $IMAGE_ID:latest
            docker push $IMAGE_ID:latest
          fi
